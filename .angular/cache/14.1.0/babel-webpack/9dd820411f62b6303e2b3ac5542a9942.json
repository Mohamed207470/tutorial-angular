{"ast":null,"code":"import { animate, keyframes, query, style, transition, trigger, stagger } from '@angular/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../data.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction HomeComponent_p_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p\", 7);\n    i0.ɵɵlistener(\"click\", function HomeComponent_p_15_Template_p_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.removeItem(i_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const goal_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", goal_r1, \" \");\n  }\n}\n\nexport let HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {\n    constructor(_data) {\n      this._data = _data;\n      this.itemCount = 4;\n      this.btnText = 'Add an item';\n      this.goalText = 'My first life goal';\n      this.goals = ['My first life goal', 'My second life goal', 'My third life goal'];\n    }\n\n    ngOnInit() {\n      this._data.goal.subscribe(res => this.goals = res);\n\n      this.itemCount = this.goals.length;\n\n      this._data.changeGoal(this.goals);\n    }\n\n    addItem() {\n      this.goals.push(this.goalText);\n      this.goalText = '';\n      this.itemCount = this.goals.length;\n    }\n\n    removeItem(i) {\n      this.goals.splice(i, 1);\n    }\n\n  }\n\n  HomeComponent.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n  };\n\n  HomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 16,\n    vars: 5,\n    consts: [[1, \"container\", \"color-dark\"], [1, \"col\"], [1, \"container\", \"color-light\"], [1, \"sm\"], [\"type\", \"text\", \"name\", \"item\", \"placeholder\", \"Life goal..\", 1, \"txt\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", 3, \"value\", \"click\"], [\"class\", \"life-container\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"life-container\", 3, \"click\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"p\");\n        i0.ɵɵtext(3, \"Add a bucket list item\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 1)(5, \"p\");\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"div\", 2)(8, \"div\", 1)(9, \"p\", 3);\n        i0.ɵɵtext(10, \"Use this form below to add a new bucket list goal. What do you want to do your life ?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"form\")(12, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.goalText = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 5);\n        i0.ɵɵlistener(\"click\", function HomeComponent_Template_input_click_13_listener() {\n          return ctx.addItem();\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"div\", 1);\n        i0.ɵɵtemplate(15, HomeComponent_p_15_Template, 2, 1, \"p\", 6);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\"Your bucket list (\", ctx.itemCount, \")\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"@goals\", ctx.goals.length);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.goalText);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.btnText);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.goals);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\".container[_ngcontent-%COMP%]{display:grid;grid-template-columns:50% auto}.col[_ngcontent-%COMP%]{padding:.4em 1.3em}.color-dark[_ngcontent-%COMP%]{background:#2885C4}.color-light[_ngcontent-%COMP%]{background:#57B3F1}input.txt[_ngcontent-%COMP%]{border:0;padding:1em;width:80%;margin-bottom:2em}input.btn[_ngcontent-%COMP%]{border:0;display:block;padding:1em 3em;background:#A5F883;color:#003a61;margin-bottom:1em;cursor:pointer}.life-container[_ngcontent-%COMP%]{background:#3FA0E1;padding:.5em;font-weight:700;cursor:pointer}\"],\n    data: {\n      animation: [trigger('goals', [transition('* => *', [query(':enter', style({\n        opacity: 0\n      }), {\n        optional: true\n      }), query(':enter', stagger('300ms', [animate('.6s ease-in', keyframes([style({\n        opacity: 0,\n        transition: 'translateY(-75%)',\n        offset: 0\n      }), style({\n        opacity: .5,\n        transition: 'translateY(35px)',\n        offset: .3\n      }), style({\n        opacity: 1,\n        transition: 'translateY(0)',\n        offset: 1\n      })]))]), {\n        optional: true\n      }), query(':leave', stagger('300ms', [animate('.6s ease-in', keyframes([style({\n        opacity: 1,\n        transition: 'translateY(0)',\n        offset: 0\n      }), style({\n        opacity: .5,\n        transition: 'translateY(35px)',\n        offset: .3\n      }), style({\n        opacity: 0,\n        transition: 'translateY(-75%)',\n        offset: 1\n      })]))]), {\n        optional: true\n      })])])]\n    }\n  });\n  return HomeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}